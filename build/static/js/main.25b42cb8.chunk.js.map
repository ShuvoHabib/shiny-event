{"version":3,"sources":["actions/action.js","reducers/memberReducer.js","reducers/reducer.js","reducers/rootReducer.js","store.js","utils/fetchEvents.js","components/Events.js","components/EventView.js","utils/fetchMembers.js","components/MemberView.js","App.js","serviceWorker.js","index.js"],"names":["FETCH_EVENTS_PENDING","FETCH_EVENTS_SUCCESS","FETCH_EVENTS_ERROR","FETCH_MEMBERS_PENDING","FETCH_MEMBERS_SUCCESS","FETCH_MEMBERS_ERROR","ADD_EVENT","SELECTED_MEMBER","LOCATE_EVENT","fetchEventsPending","type","locateEvent","data","fetchEventsSuccess","addEvent","id","event","selectedMember","member","fetchEventsError","error","fetchMembersPending","fetchMembersSuccess","fetchMembersError","initialState","pending","isSelected","getMembers","state","members","getEvents","getMembersPending","getMembersError","events","getEventsPending","getEventsError","combineReducers","action","console","log","selected","selectedMemberId","index","findIndex","select","indexes","addedEvent","eventId","selectedId","filter","_id","push","includes","slice","map","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","name","actionCreators","actions","trace","compose","fetchEvents","dispatch","fetch","then","res","json","catch","Events","display","props","toggleEvent","setState","classNames","this","hidden","className","onClick","organizer","first","last","company","scheduled_at","duration","capacity","Component","connect","bindActionCreators","EventView","allEvents","nextProps","myEvents","eventsData","selectedEventsId","x","key","fetchEventsAction","fetchMembers","MemberView","deletedId","deletedIdArr","sortData","deleteMember","sortArr","locateEventId","sort","a","b","parseFloat","age","style","border","length","App","memberId","Boolean","location","hostname","match","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25b42cb8.chunk.js","sourcesContent":["export const FETCH_EVENTS_PENDING = 'FETCH_EVENTS_PENDING';\nexport const FETCH_EVENTS_SUCCESS = 'FETCH_EVENTS_SUCCESS';\nexport const FETCH_EVENTS_ERROR = 'FETCH_EVENTS_ERROR';\nexport const FETCH_MEMBERS_PENDING = 'FETCH_MEMBERS_PENDING';\nexport const FETCH_MEMBERS_SUCCESS = 'FETCH_MEMBERS_SUCCESS';\nexport const FETCH_MEMBERS_ERROR = 'FETCH_MEMBERS_ERROR';\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const SELECTED_MEMBER = 'SELECTED_MEMBER';\nexport const LOCATE_EVENT = 'LOCATE_EVENT';\n\nexport function fetchEventsPending() {\n    return {\n        type: FETCH_EVENTS_PENDING\n    }\n}\n\nexport function locateEvent() {\n    return {\n        type: LOCATE_EVENT,\n        data: true\n    }\n}\n\nexport function fetchEventsSuccess(data) {\n    return {\n        type: FETCH_EVENTS_SUCCESS,\n        data: data\n    }\n}\n\nexport function addEvent(id) {\n    return {\n        type: ADD_EVENT,\n        event: [id]\n    }\n}\n\nexport function selectedMember(id) {\n    return {\n        type: SELECTED_MEMBER,\n        member: id\n    }\n}\n\nexport function fetchEventsError(error) {\n    return {\n        type: FETCH_EVENTS_ERROR,\n        error: error\n    }\n}\n\nexport function fetchMembersPending() {\n\treturn {\n\t\ttype: FETCH_MEMBERS_PENDING\n\t}\n}\n\nexport function fetchMembersSuccess(data) {\n\treturn {\n\t\ttype: FETCH_MEMBERS_SUCCESS,\n\t\tdata: data\n\t}\n}\n\nexport function fetchMembersError(error) {\n\treturn {\n\t\ttype: FETCH_MEMBERS_ERROR,\n\t\terror: error\n\t}\n}\n","import {\n    FETCH_MEMBERS_PENDING,\n    FETCH_MEMBERS_SUCCESS,\n    FETCH_MEMBERS_ERROR,\n    ADD_EVENT,\n    SELECTED_MEMBER,\n    LOCATE_EVENT\n} from './../actions/action';\n\nconst initialState = {\n    pending: false,\n    data: [],\n    error: null,\n    isSelected: false\n};\n\nexport default function events(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_MEMBERS_PENDING:\n            return {\n                ...state,\n                pending: true\n            };\n        case LOCATE_EVENT:\n            return {\n                ...state,\n                isSelected: action.data\n            };\n        case FETCH_MEMBERS_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                data: action.data,\n            };\n\n        case ADD_EVENT:\n            console.log(state.selected, state.selectedMemberId);\n            const index = state.selected && state.selected.findIndex((select)=>select.id === state.selectedMemberId);\n            // console.log(filterId);\n            // let index = (state.selected && state.selected.length - 1);\n            let indexes = [];\n            const addedEvent = state.selected[index].events;\n            const eventId =\n                action.event\n                && action.event[0]\n                && action.event[0].events[0];\n            const selectedId = state.selected[index].id;\n\n            state.data.filter((filter, index) => {\n                return (filter._id === state.selected.id) && indexes.push(index);\n            });\n            if (addedEvent.includes(action.event[0].events[0])) return {...state};\n            return {\n                ...state,\n                selected: [\n                    ...state.selected.slice(0, index),\n                    {id: selectedId, events: [...state.selected[index].events, ...[eventId]]},\n                ],\n                isSelected: false\n            };\n        case SELECTED_MEMBER:\n            const selectedMemberId = state.selected && state.selected.map((select)=>select.id);\n            if (selectedMemberId && selectedMemberId.includes(action.member)) return {\n                ...state,\n                selectedMemberId: action.member,\n                isSelected: false,\n            };\n            return {\n                ...state,\n                selected: [\n                    ...state.selected || [],\n                    {\n                        id: action.member,\n                        events: []\n                    },\n                ],\n                isSelected: false,\n                selectedMemberId: action.member\n            };\n\n        case FETCH_MEMBERS_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            };\n        default:\n            return state;\n    }\n}\n\n// data: {...state.data, ...action.data.data}\n\nexport const getMembers = state => state.members.data;\nexport const getEvents = state => state.members.event && state.members.event;\nexport const getMembersPending = state => state.members.pending;\nexport const getMembersError = state => state.members.error;","import {\n\tFETCH_EVENTS_PENDING,\n\tFETCH_EVENTS_SUCCESS,\n\tFETCH_EVENTS_ERROR,\n} from './../actions/action';\n\nconst initialState = {\n    pending: false,\n    data: [],\n    error: null\n};\n\nexport default function events(state = initialState, action) {\n    switch(action.type) {\n        case FETCH_EVENTS_PENDING:\n            return {\n                ...state,\n                pending: true\n            };\n        case FETCH_EVENTS_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                data: action.data\n            };\n        case FETCH_EVENTS_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            };\n        default:\n            return state;\n    }\n}\n\nexport const getEvents = state => state.events.data;\nexport const getEventsPending = state => state.events.pending;\nexport const getEventsError = state => state.events.error;\n","import { combineReducers } from 'redux';\nimport members from './memberReducer';\nimport events from './reducer';\nexport default combineReducers({\n\tmembers,\n    events\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport * as actions from \"./actions/action\";\n\nconst composeEnhancers =\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            name: 'appName',\n            actionCreators: actions,\n            trace: true\n        })\n        : compose;\nexport default function configureStore(initialState={}) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk)),\n    );\n}","import {\n\tfetchEventsPending,\n\tfetchEventsSuccess,\n\tfetchEventsError\n} from '../actions/action';\n\nfunction fetchEvents() {\n    return dispatch => {\n        dispatch(fetchEventsPending());\n        fetch('https://next.json-generator.com/api/json/get/Vk7OTypQ8')\n            .then(res => res.json())\n            .then(res => {\n                if(res.error) {\n                    throw(res.error);\n                }\n                dispatch(fetchEventsSuccess(res));\n                return res;\n            })\n            .catch(error => {\n                dispatch(fetchEventsError(error));\n            })\n    }\n}\n\nexport default fetchEvents;","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport {getEvents,} from \"../reducers/memberReducer\";\nimport {bindActionCreators} from \"redux\";\nimport {addEvent} from \"../actions/action\";\nimport {connect} from \"react-redux\";\n\nclass Events extends Component {\n    state = {\n        addEvent: false,\n        display: true,\n    };\n    addEvent = (id) => {\n        this.props.addEvent({events: [id]});\n    };\n    toggleEvent = () => {\n        this.setState({\n            display: !this.state.display\n        });\n    };\n\n    render() {\n        const selected = classNames('box-container events', {\n            selected: this.state.selected,\n            hidden: !this.state.display,\n        });\n        return (\n            <div className=\"col-6\">\n                <div className=\"row\">\n                    <button onClick={this.toggleEvent}>Toggle Event</button>\n                    <div className={selected}>\n                        <div className=\"box\">\n                            {this.props.selected &&\n                            <button onClick={() => this.addEvent(this.props.event._id)}>Add Event</button>\n                            }\n                            <div\n                                className=\"name\">{this.props.event.organizer.first} {this.props.event.organizer.last}</div>\n                            <div className=\"company\">{this.props.event.company}</div>\n                            {/*<div className=\"about\">{this.props.event.about}</div>*/}\n                            <div className=\"scheduled_at\">{this.props.event.scheduled_at}</div>\n                            <div className=\"duration\">{this.props.event.duration}</div>\n                            <div className=\"capacity\">Capacity: {this.props.event.capacity}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    events: getEvents(state),\n    selected: state.members.selected,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    addEvent,\n}, dispatch);\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Events);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport fetchEventsAction from '../utils/fetchEvents';\nimport {getEventsError, getEvents, getEventsPending} from '../reducers/reducer';\nimport Events from \"./Events\";\n\nclass EventView extends Component {\n\tstate = {\n\t\tallEvents: null,\n\t\tisSelected: true,\n\t\tselectedMemberId:'',\n\t};\n\t\n\tcomponentDidMount() {\n\t\tthis.props.fetchEvents();\n\t}\n\t\n\t\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tallEvents: nextProps.selected && nextProps.selected,\n\t\t\tisSelected: nextProps.isSelected && nextProps.isSelected,\n\t\t\tselectedMemberId: nextProps.selectedMemberId && nextProps.selectedMemberId\n\t\t})\n\t}\n\t\n\trender() {\n\t\tconst {events, error, pending, selectedMemberId} = this.props;\n\t\tconst {allEvents,isSelected} = this.state;\n\t\tconst selectedEventsId = allEvents && allEvents.filter((x) => x.id === selectedMemberId);\n\t\tconsole.log('selectedEventsId', selectedEventsId);\n\t\tif (pending) return <p>Loading...</p>;\n\t\tif (error) return <p>Sorry, no data found</p>;\n\t\t\n\t\tlet myEvents;\n\t\tif(selectedEventsId && selectedEventsId[0]) {\n\t\t\tmyEvents = events && events.filter((event) => {\n\t\t\t\treturn selectedEventsId && selectedEventsId[0].events.includes(event._id)\n\t\t\t});\n\t\t\tconsole.log('myEvents', myEvents);\n\t\t}\n\t\tlet eventsData;\n\t\tif(selectedMemberId && isSelected){\n\t\t\teventsData = myEvents.map((event) => <Events key={event._id} event={event}/>);\n\t\t} else {\n\t\t\teventsData = events.map((event) => <Events key={event._id} event={event}/>);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className='row row-eq-height'>\n\t\t\t\t\t{eventsData}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\terror: getEventsError(state),\n\tevents: getEvents(state),\n\tpending: getEventsPending(state),\n\tselected: state.members.selected,\n\tisSelected: state.members.isSelected,\n\tselectedMemberId: state.members.selectedMemberId,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n\tfetchEvents: fetchEventsAction\n}, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(EventView);\n\n","import {\n\tfetchMembersPending,\n\tfetchMembersSuccess,\n\tfetchMembersError,\n} from '../actions/action';\n\nfunction fetchMembers() {\n\treturn dispatch => {\n\t\tdispatch(fetchMembersPending());\n\t\tfetch('https://next.json-generator.com/api/json/get/NyNrlJTX8')\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.error) {\n\t\t\t\t\tthrow(res.error);\n\t\t\t\t}\n\t\t\t\tdispatch(fetchMembersSuccess(res));\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch(fetchMembersError(error));\n\t\t\t})\n\t}\n}\n\nexport default fetchMembers;","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport fetchMembers from '../utils/fetchMembers';\nimport {getMembers, getMembersError, getMembersPending} from '../reducers/memberReducer';\nimport {selectedMember, locateEvent} from \"../actions/action\";\n\nclass MemberView extends Component {\n\tstate = {\n\t\tmembers: null,\n\t\tdeletedId: null,\n\t\tdeletedIdArr: [],\n\t\tsortData: '',\n\t\tselected: false,\n\t\tallEvents: ''\n\t};\n\t\n\tcomponentDidMount() {\n\t\tthis.props.fetchMembers();\n\t}\n\t\n\tcomponentDidUpdate(nextProps) {\n\t\tconst {members} = this.props\n\t\tif (nextProps.members !== members) {\n\t\t\tif (members) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmembers: this.props.members,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdeleteMember = (id) => {\n\t\tthis.setState({\n\t\t\tdeletedId: id\n\t\t}, () => this.state.deletedIdArr.push(this.state.deletedId));\n\t};\n\t\n\tselectedMember = (id) => {\n\t\tthis.setState({selected: id}, () => {\n\t\t\tthis.props.selectedMember(id);\n\t\t});\n\t};\n\t\n\tsortArr = (sortData) => {\n\t\tthis.setState({\n\t\t\tsortData\n\t\t});\n\t};\n\t\n\tlocateEvent = (id) => {\n\t\tthis.props.locateEvent(id);\n\t\tthis.props.locateEventId();\n\t};\n\t\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.setState({\n\t\t\tallEvents: nextProps.selected && nextProps.selected\n\t\t})\n\t}\n\t\n\t\n\trender() {\n\t\tconst selected = classNames('box-container col-4', {\n\t\t\t'selected': this.state.selected,\n\t\t});\n\t\tconst {error, pending} = this.props;\n\t\tif (pending) return <p>Loading...</p>;\n\t\tif (error) return <p>Sorry, no data found</p>;\n\t\tlet members = this.state.members;\n\n\t\tif (this.state.sortData === 'ageAsc') {\n\t\t\tmembers.sort(function (a, b) {\n\t\t\t\treturn parseFloat(a.age) - parseFloat(b.age);\n\t\t\t});\n\t\t} else if (this.state.sortData === 'ageDesc') {\n\t\t\tmembers.sort(function (a, b) {\n\t\t\t\treturn parseFloat(b.age) - parseFloat(a.age);\n\t\t\t});\n\t\t} else if (this.state.sortData === 'nameAsc') {\n\t\t\tmembers.sort(function (a, b) {\n\t\t\t\treturn (a.name.first > b.name.first) * 2 - 1;\n\t\t\t});\n\t\t} else if (this.state.sortData === 'nameDesc') {\n\t\t\tmembers.sort(function (a, b) {\n\t\t\t\treturn (b.name.first > a.name.first) * 2 - 1;\n\t\t\t});\n\t\t}\n\t\t\n\t\tconst member = this.state.members && this.state.members\n\t\t\t.map((member) => (this.state.deletedId !== member._id && !this.state.deletedIdArr.includes(member._id)) &&\n\t\t\t\t<div className=\"box-container col-4\"\n\t\t\t\t\t style={{border: (this.state.selected === member._id) && '1px solid green'}}>\n\t\t\t\t\t<div className=\"box\">\n\t\t\t\t\t\t<button onClick={() => this.selectedMember(member._id)}>Select Member</button>\n\t\t\t\t\t\t<button onClick={() => this.deleteMember(member._id)}>Delete</button>\n\t\t\t\t\t\t<div className=\"name\">{member.name.first} {member.name.last}</div>\n\t\t\t\t\t\t<div className=\"name\">Age: {member.age}</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.state.allEvents\n\t\t\t\t\t\t\t&& this.state.allEvents.map((event) => event.events.length > 0 && event.id).includes(member._id)\n\t\t\t\t\t\t\t&& <button onClick={() => this.locateEvent(member._id)}>locate on calendar</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>);\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"sort-by\">\n\t\t\t\t\t<span>Sort by - </span>\n\n\t\t\t\t\t<button onClick={() => this.sortArr('ageAsc')}>Age:ascending</button>\n\t\t\t\t\t<button onClick={() => this.sortArr('ageDesc')}>Age:descending</button>\n\t\t\t\t\t<button onClick={() => this.sortArr('nameAsc')}>Name:ascending</button>\n\t\t\t\t\t<button onClick={() => this.sortArr('nameDesc')}>Name:descending</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='m-top-20 row row-eq-height'>\n\t\t\t\t\t{member}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nconst mapStateToProps = state => ({\n\terror: getMembersError(state),\n\tmembers: getMembers(state),\n\tpending: getMembersPending(state),\n\tselected: state.members.selected,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n\tfetchMembers,\n\tselectedMember,\n\tlocateEventId: locateEvent\n}, dispatch);\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(MemberView);\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport EventView from \"./components/EventView\";\nimport MemberView from \"./components/MemberView\";\n\nclass App extends Component {\n\tstate = {\n\t\tmemberId: ''\n\t};\n\tlocateEvent = (memberId) => {\n\t\tthis.setState({\n\t\t\tmemberId: memberId\n\t\t})\n\t};\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<h2>Members</h2>\n\t\t\t\t\t\t<MemberView locateEvent={this.locateEvent}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t\t<h2>Events</h2>\n\t\t\t\t\t\t<EventView memberId={this.state.memberId}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}